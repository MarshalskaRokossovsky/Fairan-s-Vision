{
    "FileID": 573785173,
    "FileVersion": 8,
    "ViewPos.x": 197,
    "ViewPos.y": -362,
    "ScriptName": "Coalition_Heart",
    "ScriptFileOut": "C:\\Users\\DmitB\\Downloads\\Coalition_Heart.scr",
    "ScriptTextOut": "C:\\Users\\DmitB\\Downloads\\Coalition_Heart.txt",
    "LangDatIn": "",
    "LangDatOut": "",
    "MainDatIn": "",
    "MainDatOut": "",
    "CacheDatIn": "",
    "CacheDatOut": "",
    "ExportLang": false,
    "Visual.Objects": 
    [
        {
            "Groups": 
            [
                {
                    "Type": "TGroup",
                    "Name": "PlayerGroup",
                    "Pos.x": 840,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 1,
                    "CntShipMax": 1,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": true,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "Elite0",
                    "Pos.x": 960,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "Elite1",
                    "Pos.x": 1030,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "Elite2",
                    "Pos.x": 1100,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "Elite4",
                    "Pos.x": 1240,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                },
                {
                    "Type": "TGroup",
                    "Name": "Elite3",
                    "Pos.x": 1170,
                    "Pos.y": 240,
                    "Parent": -1,
                    "#": 0,
                    "Owner": 62,
                    "Group.Type": 126,
                    "CntShipMin": 0,
                    "CntShipMax": 0,
                    "SpeedMin": 100,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "AddPlayer": false,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "DistSearch": 10000,
                    "Dialog": -1,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Operations": 
            [
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 920,
                    "Pos.y": 150,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Global",
                    "Code": 
                    [
                        "GRun();"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 880,
                    "Pos.y": 150,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Init",
                    "Code": 
                    [
                        "text='CH_Parameters.Items.Weapon.CustomWeapon.BBG_7146.';",
                        "  cur_item=InventNewCustomWeapon('BBG_7146');",
                        "  SetCustomWeaponSE(cur_item,'Weapon.8','Weapon.AuraEffect','',21);",
                        "  SetCustomWeaponPrimaryData(cur_item,CT(text+'TechLevel'),t_Weapon12,t_Weapon16);",
                        "  SetCustomWeaponSizeAndCost(cur_item,CT(text+'kCost'),CT(text+'AverageSize'));",
                        "  SetCustomWeaponShotData(cur_item,CT(text+'ShotType'),CT(text+'Speed'),CT(text+'AverageRadius'),CT(text+'SecondaryDamageRadius'),CT(text+'MiningFactor'));",
                        "  SetCustomWeaponAvailability(cur_item,CT(text+'StoreAvailability'));",
                        "  SetCustomWeaponDamageData(cur_item,CT(text+'MinDamage'),CT(text+'MaxDamage'),CT(text+'DamageSet'));",
                        "  tm1=newarray(1);",
                        "",
                        "  for (i=5; i<=GalaxyStars()-4; i=i+1)",
                        "  {",
                        "      tv1=0.0;",
                        "      k=0;",
                        "      if (round(sqrt(Dist2Star(GalaxyStar(i),GalaxyStar(42))))>=42) //Дистанция системы до Гралгара",
                        "      {",
                        "          for (n=0; n<=4; n=n+1)",
                        "          {",
                        "                  if (round(sqrt(Dist2Star(GalaxyStar(i),GalaxyStar(n))))<=35) //Дистанция системы до 5 родных расовых систем",
                        "                  {",
                        "                      n=6;",
                        "                      break;",
                        "                  }",
                        "                  tv1=tv1+sqrt(Dist2Star(GalaxyStar(i),GalaxyStar(n)))/100.0;",
                        "          }",
                        "          if (n!=6)",
                        "          {",
                        "              if (tv1<=3.2) //Коэффициент относительной центральности системы, отсеит системы прижатые к бокам галакарты",
                        "              {",
                        "                  SFT('Коэффициент центральности '+tv1);",
                        "                  for (n=0; n<StarPlanets(GalaxyStar(i)); n=n+1)",
                        "                  {",
                        "                      if (PlanetOwner(StarPlanets(GalaxyStar(i),n))!=6) //Отсеиваем незаселенные планеты",
                        "                      {",
                        "                          ArrayAdd(tm1,PlanetRace(StarPlanets(GalaxyStar(i),n)));",
                        "                          //Меняем владельца, правительство и тип экономики базовых планет в выбранной системе",
                        "                          PlanetOwner(StarPlanets(core_system,StarPlanets(core_system)-1),PlanetRace(StarPlanets(GalaxyStar(i),n)));",
                        "                          PlanetCustomFaction(StarPlanets(GalaxyStar(i),n),'');",
                        "                          PlanetGov(StarPlanets(GalaxyStar(i),n),3);",
                        "                          PlanetEco(StarPlanets(GalaxyStar(i),n),2);",
                        "                      }",
                        "                  }",
                        "                  ArrayDelete(tm1,0); //Удаляем нулевой элемент, равный 0, т.к. сделать это, пока он единственный в массиве, нельзя",
                        "                  SFT('Размер массива '+ArrayDim(tm1));",
                        "                  SFT('Номер итерации '+i);",
                        "                  core_system=GalaxyStar(i);",
                        "                  i=74;",
                        "                  continue;",
                        "              }",
                        "              ArrayClear(tm1);",
                        "          }",
                        "      }",
                        "  }",
                        "  //Базовое количество обитаемых планет каждой расы, которое нужно добавить",
                        "  tm2=newarray(5);",
                        "  tm2[0]=2;",
                        "  tm2[1]=2;",
                        "  tm2[2]=2;",
                        "  tm2[3]=2;",
                        "  tm2[4]=2;",
                        "  StarCustomFaction(core_system,'');",
                        "  StarOwner(core_system,0);",
                        "  for(i=0;StarShips(core_system)>i;i=i+1) {",
                        "      if(ShipStanding(StarShips(core_system,i)) == 0 || ShipStanding(StarShips(core_system,i)) == 9) {",
                        "          OrderLock(StarShips(core_system,i),1);",
                        "          ShipDestroy(StarShips(core_system,i));",
                        "      }",
                        "  }",
                        "  for (i=0; i<ArrayDim(tm1); i=i+1)",
                        "  {",
                        "      tm2[tm1[i]]=tm2[tm1[i]]-1;",
                        "  }",
                        "  for (i=4; i>=0; i=i-1)",
                        "  {",
                        "      for (n=0; n<tm2[i]; n=n+1)",
                        "      {",
                        "          CreatePlanet(core_system);",
                        "          PlanetOwner(StarPlanets(core_system,StarPlanets(core_system)-1),i);",
                        "          PlanetRace(StarPlanets(core_system,StarPlanets(core_system)-1),i);",
                        "          PlanetGov(StarPlanets(core_system,StarPlanets(core_system)-1),3);",
                        "          PlanetEco(StarPlanets(core_system,StarPlanets(core_system)-1),2);",
                        "          PlanetOrbitalVelocity(StarPlanets(core_system,StarPlanets(core_system)-1),Rnd(-30,30)+Rnd(-10,10));",
                        "          k=k+1;",
                        "          CreatePlanet(core_system);",
                        "          SetName(StarPlanets(core_system,StarPlanets(core_system)-1),CT('CH_Text.Planet_Name.CustomNames.Inhabit.'+k));",
                        "          PlanetOrbitalVelocity(StarPlanets(core_system,StarPlanets(core_system)-1),Rnd(-40,40)+Rnd(-10,10));",
                        "      }",
                        "  }",
                        "  //Затираем старый массив и расширяем его, создавая буферную зону для сортировки данных",
                        "  free(tm1);",
                        "  tm1=newarray(StarPlanets(core_system),4);",
                        "  n=0;",
                        "  for (i=0; i<StarPlanets(core_system); i=i+1)",
                        "  {",
                        "      if (PlanetOwner(StarPlanets(core_system,i))!=6) //Отсеиваем незаселенные планеты",
                        "      {",
                        "          //Записываем в массив номер коренной расы и указатель всех обитаемых планет",
                        "          tm1[n,0]=PlanetRace(StarPlanets(core_system,i));",
                        "          //SFT('Место отладки 1');",
                        "          tm1[n,1]=StarPlanets(core_system,i);",
                        "          n=n+1;",
                        "      }",
                        "  }",
                        "  n=0;",
                        "  j=0;",
                        "  //Сортируем массив по расе с сохранением указателей планет",
                        "  for (i=0; i<ArrayDim(tm1); i=i+1)",
                        "  {",
                        "      k=0;",
                        "      while (n!=5)",
                        "      {",
                        "          if (n==tm1[k,0])",
                        "          {",
                        "              tm1[i,2]=tm1[k,0];",
                        "              tm1[i,3]=tm1[k,1];",
                        "              tm1[k,0]=5;",
                        "              tm1[k,1]=5;",
                        "              j=j+1;",
                        "              if (j==2)",
                        "              {",
                        "                  n=n+1;",
                        "                  j=0;",
                        "              }",
                        "              break;",
                        "          }",
                        "          else k=k+1;",
                        "      }",
                        "  }",
                        "  //Запомним все обитаемые планеты системы в отдельный массив по ID",
                        "  core_planets=newarray(10);",
                        "  for (i=0; i<10; i=i+1)",
                        "  {",
                        "      core_planets[i]=Id(tm1[i,3]);",
                        "  }",
                        "  //Переименовываем отсортированные обитаемые планеты",
                        "  for (i=1; i<=ArrayDim(core_planets); i=i+1)",
                        "  {",
                        "      SetName(IdToPlanet(core_planets[i-1]),CT('CH_Text.Planet_Name.CustomNames.Habit.'+i));",
                        "  }",
                        "  //Меняем название системы, устанавливаем звезду и фон",
                        "  SetName(core_system,CT('CH_Text.System_Name.Aelra'));",
                        "  StarFonImage(core_system,200);",
                        "  StarSetGraph(core_system,'Star.Aelra');",
                        "  //Зачищаем систему перед спавном кораблей и станций, и передаем коалиции",
                        "  for (i=0; i<StarShips(core_system); i=i+1)",
                        "  {",
                        "      cur_ship=StarShips(core_system,i);",
                        "      if (cur_ship==Blazer() || cur_ship==Keller())",
                        "      {",
                        "          continue;",
                        "      }",
                        "      ShipDestroy(cur_ship,1);",
                        "  }",
                        "  //Зачищаем магазины всех планет системы от оборудования и запрещаем им обновляться",
                        "  for (i=1; i<=ArrayDim(core_planets); i=i+1)",
                        "  {",
                        "      for (n=ShopItems(IdToPlanet(core_planets[i-1]))-1; n>=0; n=n-1)",
                        "      {",
                        "          FreeItem(GetItemFromShop(IdToPlanet(core_planets[i-1]),n));",
                        "      }",
                        "      NoShopUpdate(IdToPlanet(core_planets[i-1]),1);",
                        "  }",
                        "  StarOwner(core_system,0);",
                        "  //Сохраняем ссылку на центральную систему в виде ID, для дальнейших операций",
                        "  core_system=Id(core_system);",
                        "  //Отправляем всю галактику на 1 ГТУ для компенсации буста планетами",
                        "  for (i=0; i<GalaxyStars(); i=i+1)",
                        "  {",
                        "      k=GalaxyStar(i);",
                        "      for (j=0; j<StarPlanets(k); j=j+1)",
                        "      {",
                        "          n=StarPlanets(k,j);",
                        "          PlanetInventionLevel(n,7,1);",
                        "      }",
                        "  }",
                        "  //Функция создания военной базы",
                        "  function EliteWBBuild(race)",
                        "  {",
                        "      dword ship=BuildRuins(GalaxyStar(core_system-1),t_WB);",
                        "      //Увеличиваем корпус",
                        "      ItemSize(ShipItems(ship,0),2500+GalaxyDiffLevels()*25);",
                        "      HullHP(ShipItems(ship,0),ItemSize(ShipItems(ship,0)));",
                        "      EqSpecial(ShipItems(ship,0),FindBonusByCustomTag('CH_Acryn_WBHull'));",
                        "      //Прокачиваем навыки на максимум",
                        "      ShipSkill(ship,'Accuracy',6);",
                        "      ShipSkill(ship,'Mobility',6);",
                        "      ShipSkill(ship,'Technical',6);",
                        "      //Отправляем по нужным координатам",
                        "      OrderTeleport(ship,GalaxyStar(core_system-1),CT('CH_Parameters.WB_coord.X.'+race),CT('CH_Parameters.WB_coord.Y.'+race),0,0);",
                        "      //Экипируем 5 атомных визиона",
                        "      int z;",
                        "      for (z=0; z<5; z=z+1)",
                        "      {",
                        "          dword cur_item=CreateEquipment(t_Weapon10,Rnd(80,180),8,race);",
                        "          SpecialToEquipment(FindBonusByNameInCfg(529),cur_item);",
                        "          AddItemToShip(ship,cur_item);",
                        "      }",
                        "      ArrangeItems(ship);",
                        "      //Повышаем ТУ всех предметов до 8, меняем расу и улучшаем",
                        "      for (z=0; z<ShipItems(ship); z=z+1)",
                        "      {",
                        "          if (!ItemIsInUse(ShipItems(ship,z)))",
                        "          {",
                        "              FreeItem(GetItemFromShip(ship,z));",
                        "          }",
                        "          ItemLevel(ShipItems(ship,z),8);",
                        "          ItemOwner(ShipItems(ship,z),race);",
                        "          ItemImprovement(ShipItems(ship,z),2,1);",
                        "      }",
                        "      ShipOwner(ship,race);",
                        "      SetName(ship,CT('CH_Text.WB_Name.'+race));",
                        "      //Очищаем магазин оборудования и запрещаем ему обновляться",
                        "      for (z=ShopItems(ship)-1; z>=0; z=z-1)",
                        "      {",
                        "          FreeItem(GetItemFromShop(ship,z));",
                        "      }",
                        "      NoShopUpdate(ship,1);",
                        "      //Чистим магазин товаров",
                        "      for(z=0; z<=7; z=z+1)",
                        "      {",
                        "          int goods=GoodsAdd(ship,z,0);",
                        "          GoodsAdd(ship,z,-goods);",
                        "      }",
                        "      //Запрещаем посадку",
                        "      NoLanding(ship,1);",
                        "      OrderLock(ship,1);",
                        "      //Вставляем случайные ММ",
                        "      ShipImproveItems(ship,50);",
                        "      result=ship;",
                        "  }",
                        "  //Массив для удобной работы с военными базами системы",
                        "  core_wb=newarray(3);",
                        "  //Спавним военные базы и записываем в массив",
                        "  core_wb[0]=Id(EliteWBBuild(0));",
                        "  core_wb[1]=Id(EliteWBBuild(1));",
                        "  core_wb[2]=Id(EliteWBBuild(2));",
                        "  //Функция для спавна центральной научной базы",
                        "  function CoreSBBuild()",
                        "  {",
                        "      dword ship=BuildRuins(GalaxyStar(core_system-1),t_SB);",
                        "      //Увеличиваем корпус",
                        "      ItemSize(ShipItems(ship,0),2000+GalaxyDiffLevels()*10);",
                        "      HullHP(ShipItems(ship,0),ItemSize(ShipItems(ship,0)));",
                        "      //Прокачиваем навыки на максимум",
                        "      ShipSkill(ship,'Accuracy',6);",
                        "      ShipSkill(ship,'Mobility',6);",
                        "      ShipSkill(ship,'Technical',6);",
                        "      //Отправляем по нужным координатам",
                        "      OrderTeleport(ship,GalaxyStar(core_system-1),-1022,-95,0,0);",
                        "      //Повышаем ТУ всех предметов до 8, меняем расу и улучшаем",
                        "      for (i=0; i<ShipItems(ship); i=i+1)",
                        "      {",
                        "          if (!ItemIsInUse(ShipItems(ship,i)))",
                        "          {",
                        "              FreeItem(GetItemFromShip(ship,i));",
                        "          }",
                        "          ItemLevel(ShipItems(ship,i),8);",
                        "          ItemOwner(ShipItems(ship,i),4);",
                        "          ItemImprovement(ShipItems(ship,i),2,1);",
                        "      }",
                        "      ShipOwner(ship,4);",
                        "      SetName(ship,CT('CH_Text.SB_Name.0'));",
                        "      //Очищаем магазин оборудования и запрещаем ему обновляться",
                        "      for (i=ShopItems(ship)-1; i>=0; i=i-1)",
                        "      {",
                        "          FreeItem(GetItemFromShop(ship,i));",
                        "      }",
                        "      NoShopUpdate(ship,1);",
                        "      //Чистим магазин товаров",
                        "      for(i=0; i<=7; i=i+1)",
                        "      {",
                        "          int goods=GoodsAdd(ship,i,0);",
                        "          GoodsAdd(ship,i,-goods);",
                        "      }",
                        "      NoLanding(ship,1);",
                        "      result=ship;",
                        "  }",
                        "  //Спавним научную базу",
                        "  CoreSBBuild();",
                        "  //Функция для спавна элитного военного",
                        "  function BuyEliteWarrior(race)",
                        "  {",
                        "      dword ship=BuyWarrior(IdToPlanet(core_planets[Rnd(0+2*race,1+2*race)]),500);",
                        "      //Увеличиваем корпус и его стоимость",
                        "      ItemSize(ShipItems(ship,0),(700+100*(4-race))*CT('CH_Parameters.Warrior_koef_hp.'+(GalaxyTechLevel()-1))/10);",
                        "      HullHP(ShipItems(ship,0),ItemSize(ShipItems(ship,0)));",
                        "      ItemCost(ShipItems(ship,0),Rnd(100000*GalaxyTechLevel(),160000*GalaxyTechLevel()));",
                        "      //Устанавливаем серию корпусу",
                        "      HullSeries(ShipItems(ship,0),FindSeriesByName(CT('CH_Parameters.Warrior_series.'+race)));",
                        "      //Прокачиваем навыки на максимум",
                        "      ShipSkill(ship,'Accuracy',6);",
                        "      ShipSkill(ship,'Mobility',6);",
                        "      ShipSkill(ship,'Technical',6);",
                        "      //Накидываем денег и проводим реэкипировку",
                        "      ShipMoney(ship,round(4*ShipMoney(ship)));",
                        "      int z;",
                        "      int h;",
                        "      int v;",
                        "      for (z=0; z<10; z=z+1)",
                        "      {",
                        "          ShipRefit(ship);",
                        "      }",
                        "      //Подготовка к выдаче орудий",
                        "      //Заполняем массив ванильными орудиями и ББГ 7146",
                        "      tm1=newarray(1);",
                        "      for (z=0; z<7; z=z+1)",
                        "      {",
                        "          ArrayAdd(tm1,CT('CH_Parameters.Warrior_guns.Names.'+z));",
                        "      }",
                        "      ArrayDelete(tm1,0);",
                        "      //Проверяем подключен ли мод на плазмоган и если да, то добавляем в выдачу",
                        "      if (BlockExist('MicroModuls.ExpPlasmaGun_Armoloc'))",
                        "      {",
                        "          ArrayAdd(tm1,CT('CH_Parameters.Warrior_guns.Names.11'));",
                        "      }",
                        "      //Проверяем подключен ли мод на орудия из солянки и если да, то добавляем в выдачу",
                        "      if (BlockExist('Items.Weapon.CustomWeapon.Mauler'))",
                        "      {",
                        "          for (h=7; h<11; h=h+1)",
                        "          {",
                        "              ArrayAdd(tm1,CT('CH_Parameters.Warrior_guns.Names.'+h));",
                        "          }",
                        "      }",
                        "      //Проверяем подключен ли мод Шу на пушки и если да, то добавляем в выдачу",
                        "      if (BlockExist('MicroModuls.ShuEmitter_Penny'))",
                        "      {",
                        "          for (v=12; v<15; v=v+1)",
                        "          {",
                        "              ArrayAdd(tm1,CT('CH_Parameters.Warrior_guns.Names.'+v));",
                        "          }",
                        "      }",
                        "      dword cur_item;",
                        "      dword random;",
                        "      int index;",
                        "      for (z=1; z<=5; z=z+1)",
                        "      {",
                        "          //Выбираем рандомно пушку",
                        "          random=Rnd(0,ArrayDim(tm1)-1);",
                        "          //Делаем выдачу ББГ 7146 более редким",
                        "          if (random==6)",
                        "          {",
                        "              index=Rnd(1,3);",
                        "              if (index>1)",
                        "              {",
                        "                  z=z-1;",
                        "                  continue;",
                        "              }",
                        "          }",
                        "          //Если оригинальное",
                        "          if (count(tm1[random])<3)",
                        "          {",
                        "              cur_item=CreateEquipment(tm1[random],Rnd(10,15)*CT('CH_Parameters.Warrior_guns.Sizes.'+random),8,race);",
                        "          }",
                        "          //Если кастомное",
                        "          else cur_item=CreateCustomWeapon(tm1[random],Rnd(10,15)*CT('CH_Parameters.Warrior_guns.Sizes.'+random),8,race);",
                        "          AddItemToShip(ship,cur_item);",
                        "          ItemIsInUse(cur_item,ship,1,z);",
                        "          NoDropItem(cur_item,1);",
                        "      }",
                        "      ArrangeItems(ship);",
                        "      //Подготавлиемся к выдаче артефактов кораблю",
                        "      //Создаем массив со списком всех доступных артефактов",
                        "      ArrayClear(tm2);",
                        "      tm2=newarray(1);",
                        "      for (z=0; z<13; z=z+1)",
                        "      {",
                        "          ArrayAdd(tm2,CT('CH_Parameters.Warrior_artefacts.'+z));",
                        "      }",
                        "      ArrayDelete(tm2,0);",
                        "      //Создаем массив с количеством пушек одного типа урона",
                        "      tm3=newarray(3);",
                        "      //Заполним его нулями",
                        "      for (z=0; z<3; z=z+1)",
                        "      {",
                        "          tm3[z]=0;",
                        "      }",
                        "      int fv1;",
                        "      int fv2;",
                        "      //Перебираем все оружие на корабле",
                        "      for(z=0; z<5; z=z+1)",
                        "      {",
                        "          fv1=ShipWeapon(ship,z+1);",
                        "          //Определяем его тип по дамагсету и фиксируем количество оружия с каждым типом урона",
                        "          fv2=GetEquipmentStats(fv1,6);",
                        "          //Энергетическое",
                        "          if (fv2 & 1)",
                        "          {",
                        "              tm3[0]=tm3[0]+1;",
                        "          }",
                        "          //Осколочное",
                        "          else if (fv2 & 2)",
                        "          {",
                        "              tm3[1]=tm3[1]+1;",
                        "          }",
                        "          //Ракетное",
                        "          else tm3[2]=tm3[2]+1;",
                        "      }",
                        "      //SFT('Энергетического '+tm3[0]+' Осколочного '+tm3[1]+' Ракетного '+tm3[2]);",
                        "      //Обнуляем переменную, запишем в нее в дальнейшем максимум орудий одного типа",
                        "      fv1=0;",
                        "      //Находим наиболее используемый тип оружия",
                        "      if (tm3[0]>tm3[1] && tm3[0]>tm3[2])",
                        "      {",
                        "          fv1=1;",
                        "      }",
                        "      else if (tm3[1]>tm3[0] && tm3[1]>tm3[2])",
                        "      {",
                        "          fv1=2;",
                        "      }",
                        "      else if (tm3[2]>tm3[0] && tm3[2]>tm3[1])",
                        "      {",
                        "          fv1=3;",
                        "      }",
                        "      //Если у вояки солянка, то рандомим",
                        "      if (!fv1)",
                        "      {",
                        "          if (tm3[0]==tm3[1])",
                        "          {",
                        "              fv1=Rnd(1,2);",
                        "          }",
                        "          else if (tm3[1]==tm3[2])",
                        "          {",
                        "              fv1=Rnd(2,3);",
                        "          }",
                        "          else fv1=1;",
                        "      }",
                        "      //SFT('Доминирующий тип корабля '+fv1);",
                        "      //Удаляем неподходящие по типу орудий арты",
                        "      if (fv1==1)",
                        "      {",
                        "          ArrayDelete(tm2,0);",
                        "          ArrayDelete(tm2,0);",
                        "      }",
                        "      else if (fv1==2)",
                        "      {",
                        "          ArrayDelete(tm2,1);",
                        "          ArrayDelete(tm2,1);",
                        "          ArrayDelete(tm2,1);",
                        "      }",
                        "      else if (fv1==3)",
                        "      {",
                        "          ArrayDelete(tm2,0);",
                        "          ArrayDelete(tm2,1);",
                        "          ArrayDelete(tm2,1);",
                        "      }",
                        "      //Начинаем саму выдачу артефактов",
                        "      for (z=0; z<4; z=z+1)",
                        "      {",
                        "          index=Rnd(0,ArrayDim(tm2)-1);",
                        "          random=tm2[index];",
                        "          cur_item=CreateArt(random,race);",
                        "          AddItemToShip(ship,cur_item);",
                        "          NoDropItem(cur_item,1);",
                        "          ArrayDelete(tm2,index);",
                        "      }",
                        "      ArrangeItems(ship);",
                        "      //Повышаем ТУ всех предметов до 8, улучшаем и очищаем трюм от старых пушек",
                        "      for (z=ShipItems(ship)-1; z>=0; z=z-1)",
                        "      {",
                        "          if (!ItemIsInUse(ShipItems(ship,z)))",
                        "              {",
                        "                  FreeItem(GetItemFromShip(ship,z));",
                        "                  continue;",
                        "              }",
                        "          ItemLevel(ShipItems(ship,z),8);",
                        "          ItemImprovement(ShipItems(ship,z),2,1);",
                        "      }",
                        "      //Вставляем случайные ММ",
                        "      ShipImproveItems(ship,40);",
                        "      //Повышаем звание до аса",
                        "      while (ShipRank(ship)<5)",
                        "      {",
                        "          ShipRankPoints(ship,ShipNextRankPoints(ship));",
                        "          ShipRaiseRank(ship);",
                        "      }",
                        "      Chameleon(ship);",
                        "      result=ship;",
                        "  }",
                        "  //Функция для спавна элитного флагмана",
                        "  function BuyEliteFlagman(race)",
                        "  {",
                        "      dword ship=BuyBigWarrior(IdToPlanet(core_planets[Rnd(0+2*race,1+2*race)]),1000);",
                        "      //Увеличиваем корпус и его стоимость, акринируем",
                        "      ItemSize(ShipItems(ship,0),(1500+150*(4-race))*CT('CH_Parameters.Warrior_koef_hp.'+(GalaxyTechLevel()-1))/10);",
                        "      HullHP(ShipItems(ship,0),ItemSize(ShipItems(ship,0)));",
                        "      ItemCost(ShipItems(ship,0),Rnd(200000*GalaxyTechLevel(),360000*GalaxyTechLevel()));",
                        "      SpecialToEquipment(FindBonusByNameInCfg('CH_Acryn_FlagmanHull_'+race),ShipItems(ship,0));",
                        "      //Прокачиваем навыки на максимум",
                        "      ShipSkill(ship,'Accuracy',6);",
                        "      ShipSkill(ship,'Mobility',6);",
                        "      ShipSkill(ship,'Technical',6);",
                        "      ShipSkill(ship,'Leadership',6);",
                        "      //Проводим реэкипировку",
                        "      int z;",
                        "      for (z=0; z<10; z=z+1)",
                        "      {",
                        "      ShipRefit(ship);",
                        "      }",
                        "      //Выкидываем уже надетые пушки, чтобы новые нормально оделись",
                        "      for (z=ShipItems(ship)-1; z>=0; z=z-1)",
                        "      {",
                        "          if (ItemType(ShipItems(ship,z))>=50)",
                        "          {",
                        "              FreeItem(GetItemFromShip(ship,z));",
                        "          }",
                        "      }",
                        "      //Выдаем пушки флагману из заготовленных сетов",
                        "      dword cur_item;",
                        "      for (z=1; z<=5; z=z+1)",
                        "      {",
                        "          cur_item=CreateEquipment(CT('CH_Parameters.Flagman_guns.Names.'+race),Rnd(10,20)*CT('CH_Parameters.Flagman_guns.Sizes.'+race),8,race);",
                        "          AddItemToShip(ship,cur_item);",
                        "          ItemIsInUse(cur_item,ship,1);",
                        "          ItemImprovement(cur_item,2,1);",
                        "          SpecialToEquipment(FindBonusByNameInCfg('CH_Acryn_FlagmanWP_'+race),cur_item);",
                        "          NoDropItem(cur_item,1);",
                        "      }",
                        "      //Выдаем артефакты из заготовленных сетов",
                        "      for (z=0; z<4; z=z+1)",
                        "      {",
                        "          cur_item=CreateArt(CT('CH_Parameters.Flagman_artefacts.'+race+'.'+z),race);",
                        "          AddItemToShip(ship,cur_item);",
                        "          ItemIsInUse(cur_item,ship,1);",
                        "          NoDropItem(cur_item,1);",
                        "      }",
                        "      //Повышаем ТУ всех предметов до 8, улучшаем",
                        "      for (z=ShipItems(ship)-1; z>=0; z=z-1)",
                        "      {",
                        "          ItemLevel(ShipItems(ship,z),8);",
                        "          ItemImprovement(ShipItems(ship,z),2,1);",
                        "      }",
                        "      //Вставляем случайные ММ",
                        "      ShipImproveItems(ship,40);",
                        "      //Повышаем звание до аса",
                        "      while (ShipRank(ship)<6)",
                        "      {",
                        "          ShipRankPoints(ship,ShipNextRankPoints(ship));",
                        "          ShipRaiseRank(ship);",
                        "      }",
                        "      Chameleon(ship);",
                        "      result=ship;",
                        "  }",
                        "  //Задаем массив со всеми таймерами скрипта",
                        "  timer=newarray(8);",
                        "  //Задаем интервал проверки комплектности групп элиты",
                        "  timer[0]=CurTurn()+10;",
                        "  //Остальные таймеры",
                        "  timer[1]=CurTurn();",
                        "  timer[2]=CurTurn();",
                        "  timer[3]=CurTurn();",
                        "  timer[4]=CurTurn()+100;",
                        "  timer[5]=CurTurn();",
                        "  timer[6]=CurTurn();",
                        "  timer[7]=CurTurn();",
                        "  //Массив с переменными групп, т.к. через СТ работатает некорректно",
                        "  groups=newarray(5);",
                        "  groups[0]=Elite0;",
                        "  groups[1]=Elite1;",
                        "  groups[2]=Elite2;",
                        "  groups[3]=Elite3;",
                        "  groups[4]=Elite4;",
                        "  //Создаем массив для хранения Id элитных флагманов",
                        "  elite_flagmans=newarray(5);",
                        "  //Создаем массив для хранения всех маркеров скрипта",
                        "  markers=newarray(4);",
                        "  markers[0]=0;",
                        "  markers[1]=0;",
                        "  markers[2]=0;",
                        "  markers[3]=0;"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 840,
                    "Pos.y": 150,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "//Держим ТУ всех планет центральной системы на 2 меньше ГТУ, чтобы компенсировать добавку планет в галактике",
                        "  if (CurTurn()>=timer[5])",
                        "  {",
                        "      SFT('Замедление ГТУ запущено');",
                        "      k=GalaxyStar(core_system-1);",
                        "      for (j=0; j<StarPlanets(k); j=j+1)",
                        "      {",
                        "          n=StarPlanets(k,j);",
                        "          PlanetInventionLevel(n,7,max(GalaxyTechLevel()-2,1));",
                        "      }",
                        "      timer[5]=CurTurn()+30;",
                        "  }",
                        "  //Эзер по первому прилету в систему с краткой информацией о ней",
                        "  if (ShipStar(Player())==GalaxyStar(core_system-1))",
                        "  {",
                        "      if (!markers[2])",
                        "      {",
                        "          CustomEther('SysInform',7,'',CT('CH_Text.Eithers.SysInform'));",
                        "          markers[2]=1;",
                        "      }",
                        "  }",
                        "  if (CurTurn()>=timer[6])",
                        "  {",
                        "      timer[6]=CurTurn+10;",
                        "      for (i=GalaxyEvents()-1; i>=0; i=i-1)",
                        "      {",
                        "          if (GalaxyEventType(i)=='PlayerUsesBeacon')",
                        "          {",
                        "              if (GalaxyEventData(i,0)==core_system)",
                        "              {",
                        "                  for (j=0; j<=GalaxyStars()-1; j=j+1)",
                        "                  {",
                        "                      if (StarOwner(GalaxyStar(j))==0)",
                        "                      {",
                        "                          for (n=0; n<StarPlanets(GalaxyStar(j)); n=n+1)",
                        "                          {",
                        "                              RelationToRanger(StarPlanets(GalaxyStar(j),n),Player(),0);",
                        "                          }",
                        "                      }",
                        "                  }",
                        "                  SFT('УЖАСНЫЙ МАЯК АКТИВИРОВАН');",
                        "                  CustomEther('BeaconAlert',7,'',CT('CH_Text.Eithers.BeaconAlert'));",
                        "                  Sound('Sound.Beacon');",
                        "                  markers[3]=1;",
                        "                  break;",
                        "              }",
                        "          }",
                        "      }",
                        "  }",
                        "  if (markers[3]==1)",
                        "  {",
                        "      if (CurTurn()>=timer[6])",
                        "      {",
                        "          for (j=0; j<=GalaxyStars()-1; j=j+1)",
                        "          {",
                        "              if (StarOwner(GalaxyStar(j))==0)",
                        "              {",
                        "                  for (n=0; n<StarPlanets(GalaxyStar(j)); n=n+1)",
                        "                  {",
                        "                      RelationToRanger(StarPlanets(GalaxyStar(j),n),Player(),0);",
                        "                  }",
                        "              }",
                        "          }",
                        "          timer[6]=CurTurn()+30;",
                        "      }",
                        "  }",
                        "  if (CurTurn()>=timer[0])",
                        "  {",
                        "      SFT('Пошла проверка вояк');",
                        "      //Перебираем группы с элитными военными",
                        "      for (j=4; j>=0; j=j-1)",
                        "      {",
                        "          //Проверяем размер группы",
                        "          SFT('Размер группы номер '+j+' '+GroupCount(groups[j]));",
                        "          if (GroupCount(groups[j])<1+GalaxyDiffLevels()/100+max(100/GalaxyDiffLevels(),1))",
                        "          {",
                        "              tv1=0;",
                        "              tv2=0;",
                        "              //Перебираем все корабли группы и запоминаем количество обычных кораблей и флагманов",
                        "              for (k=0; k<GroupCount(groups[j]); k=k+1)",
                        "              {",
                        "                  if (ShipSubType(GroupShip(groups[j],k))==0)",
                        "                  {",
                        "                      tv1=tv1+1;",
                        "                  }",
                        "                  else if (ShipSubType(GroupShip(groups[j],k))==1)",
                        "                  {",
                        "                      tv2=tv2+1;",
                        "                  }",
                        "              }",
                        "              SFT('Обычных вояк '+tv1);",
                        "              SFT('Флагманов '+tv2);",
                        "              //Если каких-то кораблей не хватает, то пополняем новыми",
                        "              if (tv1<GalaxyDiffLevels()/100+max(100/GalaxyDiffLevels(),1))",
                        "              {",
                        "                  if (CurTurn()>=timer[1])",
                        "                  {",
                        "                      cur_ship=BuyEliteWarrior(j);",
                        "                      ShipJoin(groups[j],cur_ship);",
                        "                      //SFT('Военный присоединен к группе '+groups[j]);",
                        "                      OrderLock(cur_ship,1);",
                        "                      //Кулдаун респавна элитного военного",
                        "                      timer[1]=CurTurn()+25;",
                        "                  }",
                        "              }",
                        "              if (!tv2)",
                        "              {",
                        "                  if (CurTurn()>=timer[2])",
                        "                  {",
                        "                      cur_ship=BuyEliteFlagman(j);",
                        "                      ShipJoin(groups[j],cur_ship);",
                        "                      //SFT('Флагман присоединен к группе '+groups[j]);",
                        "                      elite_flagmans[j]=Id(cur_ship);",
                        "                      OrderLock(cur_ship,1);",
                        "                      //Кулдаун респавна элитного флагмана",
                        "                      timer[2]=CurTurn()+40;",
                        "                  }",
                        "              }",
                        "          }",
                        "      }",
                        "      //Проверяем существование военных баз",
                        "      for (n=0; n<3; n=n+1)",
                        "      {",
                        "          if (!IdToShip(core_wb[n]))",
                        "          {",
                        "              if (CurTurn()>=timer[3])",
                        "              {",
                        "                  core_wb[n]=EliteWBBuild(n);",
                        "                  timer[3]=CurTurn()+90;",
                        "              }",
                        "          }",
                        "      }",
                        "      timer[0]=CurTurn()+10;",
                        "  }",
                        "  if (!markers[1])",
                        "  {",
                        "      if (CurTurn()>=timer[4])",
                        "      {",
                        "          SFT('Инициируется патрулирование');",
                        "          if (markers[0]==5)",
                        "          {",
                        "              markers[0]=0;",
                        "          }",
                        "          for (i=0; i<5; i=i+1)",
                        "          {",
                        "              if (!ShipInNormalSpace(IdToShip(elite_flagmans[i])))",
                        "              {",
                        "                  OrderTakeOff(IdToShip(elite_flagmans[i]));",
                        "                  continue;",
                        "              }",
                        "          OrderMove(IdToShip(elite_flagmans[i]),CT('CH_Parameters.Patrol_coord.'+i+'.X.'+markers[0]),CT('CH_Parameters.Patrol_coord.'+i+'.Y.'+markers[0]));",
                        "          }",
                        "          markers[0]=markers[0]+1;",
                        "          for (j=4; j>=0; j=j-1)",
                        "          {",
                        "              for (k=0; k<GroupCount(groups[j]); k=k+1)",
                        "              {",
                        "                  if (ShipSubType(GroupShip(groups[j],k))==1)",
                        "                  {",
                        "                      SFT('Флагман пропущен');",
                        "                      continue;",
                        "                  }",
                        "                  if (!ShipInNormalSpace(GroupShip(groups[j],k)))",
                        "                  {",
                        "                      OrderTakeOff(GroupShip(groups[j],k));",
                        "                      continue;",
                        "                  }",
                        "                  OrderFollowShip(GroupShip(groups[j],k),IdToShip(elite_flagmans[j]),2);",
                        "              }",
                        "          }",
                        "      timer[4]=CurTurn()+20;",
                        "      }",
                        "  }"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 1100,
                    "Pos.y": 320,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(StarBattle(GalaxyStar(core_system-1))==1) {",
                        "      markers[1]=1;",
                        "      OrderLock(CurShip,0);",
                        "      SFT('БИТВА В СИСТЕМЕ НАЧАЛАСЬ');",
                        "      ChangeState(2);",
                        "      exit;",
                        "    }"
                    ]
                },
                {
                    "Type": "Top",
                    "Name": "",
                    "Pos.x": 1220,
                    "Pos.y": 320,
                    "Parent": -1,
                    "#": 0,
                    "Code.Type": "Turn",
                    "Code": 
                    [
                        "if(StarBattle(GalaxyStar(core_system-1))==0) {",
                        "      markers[1]=0;",
                        "      OrderLock(CurShip,1);",
                        "      SFT('БИТВА В СИСТЕМЕ КОНЧИЛАСЬ');",
                        "      ChangeState(1);",
                        "      exit;",
                        "    }"
                    ]
                }
            ],
            "Planets": 
            [
                {
                    "Type": "TPlanet",
                    "Name": "PlanetNew",
                    "Pos.x": 1030,
                    "Pos.y": 200,
                    "Parent": -1,
                    "#": 0,
                    "Race": 62,
                    "Owner": 62,
                    "Economy": 14,
                    "Goverment": 62,
                    "RangeMin": 0,
                    "RangeMax": 100,
                    "Dialog": -1
                }
            ],
            "Ships": 
            [
                {
                    "Type": "TStarShip",
                    "Name": "",
                    "Pos.x": 1030,
                    "Pos.y": 140,
                    "Parent": -1,
                    "#": 0,
                    "Count": 1,
                    "Owner": 62,
                    "Ship.Type": 126,
                    "Player": true,
                    "SpeedMin": 0,
                    "SpeedMax": 10000,
                    "Weapon": 0,
                    "CargoHook": 0,
                    "EmptySpace": 0,
                    "StatusTraderMin": 0,
                    "StatusTraderMax": 100,
                    "StatusWarriorMin": 0,
                    "StatusWarriorMax": 100,
                    "StatusPirateMin": 0,
                    "StatusPirateMax": 100,
                    "StrengthMin": "0",
                    "StrengthMax": "0",
                    "Ruins": ""
                }
            ],
            "Stars": 
            [
                {
                    "Type": "TStar",
                    "Name": "StarNew",
                    "Pos.x": 1030,
                    "Pos.y": 170,
                    "Parent": -1,
                    "#": 0,
                    "Constellation": -1,
                    "Priority": 0,
                    "NoKling": false,
                    "NoComeKling": false
                }
            ],
            "States": 
            [
                {
                    "Type": "TState",
                    "Name": "PlayerState",
                    "Pos.x": 840,
                    "Pos.y": 280,
                    "Parent": -1,
                    "#": 0,
                    "Move": 0,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 0,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "ElitePatrol",
                    "Pos.x": 1100,
                    "Pos.y": 280,
                    "Parent": -1,
                    "#": 0,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 0,
                    "EUnique": "",
                    "EMsg": ""
                },
                {
                    "Type": "TState",
                    "Name": "EliteFight",
                    "Pos.x": 1220,
                    "Pos.y": 280,
                    "Parent": -1,
                    "#": 0,
                    "Move": 5,
                    "MoveObj": -1,
                    "Attack.Count": 0,
                    "TakeItem": -1,
                    "TakeAllItem": false,
                    "OnTalk": "",
                    "OnActCode": "",
                    "EType": 0,
                    "EUnique": "",
                    "EMsg": ""
                }
            ],
            "Variables": 
            [
                {
                    "Type": "TVar",
                    "Name": "i",
                    "Pos.x": 840,
                    "Pos.y": 40,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "n",
                    "Pos.x": 840,
                    "Pos.y": 60,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tv1",
                    "Pos.x": 1100,
                    "Pos.y": -40,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tm1",
                    "Pos.x": 1100,
                    "Pos.y": 0,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "k",
                    "Pos.x": 840,
                    "Pos.y": 20,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "core_system",
                    "Pos.x": 900,
                    "Pos.y": 20,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "j",
                    "Pos.x": 840,
                    "Pos.y": 80,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Int",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_ship",
                    "Pos.x": 1340,
                    "Pos.y": -40,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "core_planets",
                    "Pos.x": 1100,
                    "Pos.y": 60,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "text",
                    "Pos.x": 1340,
                    "Pos.y": 60,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Str",
                    "Init": "",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tm2",
                    "Pos.x": 1100,
                    "Pos.y": 20,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tm3",
                    "Pos.x": 1100,
                    "Pos.y": 40,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "tv2",
                    "Pos.x": 1100,
                    "Pos.y": -20,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "groups",
                    "Pos.x": 1100,
                    "Pos.y": 80,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "cur_item",
                    "Pos.x": 1340,
                    "Pos.y": -20,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Dword",
                    "Init": "0",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "core_wb",
                    "Pos.x": 1100,
                    "Pos.y": 100,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "timer",
                    "Pos.x": 1100,
                    "Pos.y": 120,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "elite_flagmans",
                    "Pos.x": 1220,
                    "Pos.y": 100,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                },
                {
                    "Type": "TVar",
                    "Name": "markers",
                    "Pos.x": 1220,
                    "Pos.y": 120,
                    "Parent": -1,
                    "#": 0,
                    "Var.Type": "Unknown",
                    "Init": "None",
                    "Global": false
                }
            ]
        }
    ],
    "Visual.Links": 
    [
        {
            "Type": "TGraphLink",
            "Begin": 25,
            "End": 22,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 26,
            "End": 23,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 27,
            "End": 23,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 28,
            "End": 23,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 30,
            "End": 23,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 29,
            "End": 23,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 23,
            "End": 34,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 24,
            "End": 35,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 25,
            "End": 20,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 26,
            "End": 20,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 27,
            "End": 20,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 28,
            "End": 20,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 30,
            "End": 20,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 29,
            "End": 20,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 20,
            "End": 19,
            "Nom": 0,
            "Arrow": true
        },
        {
            "Type": "TGraphLink",
            "Begin": 21,
            "End": 19,
            "Nom": 0,
            "Arrow": true
        }
    ],
    "BlockPar.EC.Total.Strings": 0,
    "BlockPar.EC": 
    [
      
    ]
}